{"version":3,"sources":["store/types.ts","resources.ts","store/actions/updateUser.action.ts","components/layout/Nav.tsx","components/layout/Footer.tsx","components/layout/index.tsx","components/pages/Home.tsx","components/Pokemon.tsx","components/Ability.tsx","components/ListSearch.tsx","components/pages/LogIn.tsx","components/pages/Admin.tsx","components/pages/Redirect.tsx","App.tsx","reportWebVitals.ts","store/reducers/user.reducer.ts","store/reducers/index.ts","index.tsx"],"names":["SIGNUP","LOGIN","LOGOUT","POKEMON","ABILITIES","routes","API","updateUser","type","payload","Nav","user","useSelector","to","exact","activeClassName","username","Footer","Layout","children","dispatch","useDispatch","history","useHistory","logOut","a","fetch","ok","push","className","onClick","Home","props","Pokemon","pokemon","name","type1","type2","pathname","state","abilityName","abilityObj","Ability","ability","description","guardType","object","ListSearch","useLocation","useState","list","setList","searchSetting","setSearchSetting","searchValue","setSearchValue","searchBar","useRef","error","setError","onSubmit","e","preventDefault","response","toUpperCase","slice","json","target","reset","useEffect","setTimeout","current","value","defaultChecked","onChange","ref","map","item","Math","random","style","marginTop","LogIn","password","confirmPassword","formData","setFormData","method","headers","body","JSON","stringify","credentials","msg","status","placeholder","Admin","setName","setType","setMethod","setType1","setType2","setAbilityName","setDescription","message","setMessage","Redirect","App","path","component","route","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","createStore","reducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"+NAAaA,G,MAAS,UACTC,EAAQ,QACRC,EAAS,SACTC,EAAU,UACVC,EAAY,YCAZC,EAAS,CAClB,UACA,IACA,iBACA,gBACA,kBACA,qBAGWC,EAZI,kC,wBCIJC,EAFI,SAACC,EAAeC,GAAhB,MAA2C,CAAED,OAAMC,YCkBvDC,MAhBf,WACI,IAAMC,EAAOC,aAAY,qBAAGD,QAE5B,OACI,gCACI,cAAC,IAAD,CAASE,GAAG,UAAUC,OAAK,EAACC,gBAAgB,eAA5C,kBACCJ,GAAQ,qCACL,cAAC,IAAD,CAASE,GAAG,kBAAkBC,OAAK,EAACC,gBAAgB,eAApD,qBACA,cAAC,IAAD,CAASF,GAAG,oBAAoBC,OAAK,EAACC,gBAAgB,eAAtD,0BAGgB,WAAf,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMK,WAAwB,cAAC,IAAD,CAASH,GAAG,gBAAgBC,OAAK,EAACC,gBAAgB,eAAlD,uBCD5BE,EAbA,WACX,OACI,iCACI,iCACI,qDACA,qDACA,uBACA,iECoCDC,EA9BA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SACRR,EAAOC,aAAY,qBAAED,QACrBS,EAAWC,cACXC,EAAUC,cAEVC,EAAM,uCAAG,sBAAAC,EAAA,sEACUC,MAAMpB,EAAM,WADtB,cAEEqB,KACTP,EAAUb,EAAWL,EAAQ,OAC7BoB,EAAQM,KAAK,MAJN,2CAAH,qDAQZ,OACI,gCACMjB,EAMI,wBAAQkB,UAAU,gBAAgBC,QAASN,EAA3C,qBAJF,uBAAMK,UAAU,eAAhB,UACI,iCAAQ,cAAC,IAAD,CAAMhB,GAAG,iBAAT,uBACR,iCAAQ,cAAC,IAAD,CAAMA,GAAG,gBAAT,yBAIhB,cAAC,EAAD,IACKM,EACL,cAAC,EAAD,QCfGY,EAhBF,SAACC,GACV,IAAMrB,EAAOC,aAAY,qBAAGD,QAE5B,OACI,cAAC,EAAD,UACI,sBAAKkB,UAAU,iBAAf,UACI,mDACClB,EACK,4EAA8C,iCAASA,EAAKK,WAA5D,OACA,4E,OCcPiB,EAxBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QACf,OACI,+BACI,gCACI,4CACA,+BAAOA,EAAQC,UAEnB,gCACI,4CACA,+BAAOD,EAAQE,QAAUF,EAAQG,MAAQH,EAAQE,MAA1C,UAAqDF,EAAQE,MAA7D,aAAuEF,EAAQG,YAE1F,gCACI,+CACA,+BAAM,cAAC,IAAD,CAAMxB,GAAI,CACZyB,SAAS,oBACTC,MAAO,CAAEC,YAAaN,EAAQO,WAAWN,OAFvC,SAIDD,EAAQO,WAAWN,gBCHzBO,EAfC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QACf,OACI,+BACI,gCACI,4CACA,+BAAOA,EAAQR,UAEnB,gCACI,mDACA,+BAAOQ,EAAQC,qBCE/B,SAASC,EAAUrC,EAA0CsC,GACzD,OAAQtC,GACJ,KAAKL,EACD,KAAM,SAAU2C,MAAa,UAAWA,MAAa,UAAWA,MAAa,eAAgBA,GAAS,MACtG,KAAM,SAAUA,EAAOL,eAAiB,gBAAiBK,EAAOL,YAAa,MAC7E,OAAO,EACX,KAAKrC,EACD,KAAM,SAAU0C,MAAa,gBAAiBA,GAAS,MACvD,OAAO,EACX,QACI,OAAO,EAEf,OAAO,EAGX,IAmGeC,EAnGI,SAAC,GAAsB,IAApBvC,EAAmB,EAAnBA,KACV+B,EAAUS,cAAVT,MAD6B,EAEbU,mBAA2C,MAF9B,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGKF,mBAAiB,QAHtB,mBAG9BG,EAH8B,KAGfC,EAHe,OAICJ,mBAAiB,IAJlB,mBAI9BK,EAJ8B,KAIjBC,EAJiB,KAK/BC,EAAYC,iBAA8B,MALX,EAMXR,mBAAiB,IANN,mBAM9BS,EAN8B,KAMvBC,EANuB,KAQ/BC,EAAQ,uCAAG,WAAOC,GAAP,mBAAApC,EAAA,yDACToC,GAAGA,EAAEC,iBAEJR,EAHQ,gCAIQ5B,MAAMpB,EAAG,WAAOE,IAASL,EAAU,UAAY,YAJvD,OAIT4D,EAJS,8CAKWrC,MAAMpB,EAAG,WAAOE,IAASL,EAAU,UAAY,UAAtC,YAAmDiD,EAAnD,aAAoE,UAAAE,EAAY,UAAZ,eAAgBU,eAAgBV,EAAYW,MAAM,KAL1I,OAKNF,EALM,kBAMRA,EAASpC,GAND,wBAOTgC,EAAS,yBAPA,kCAUbA,EAAS,IAVI,UAWII,EAASG,OAXb,QAWTA,EAXS,OAYbf,EAAQe,IACHZ,GAAeO,GACHA,EAAEM,OACRC,QAfE,4CAAH,sDAgDd,OA7BAC,qBAAU,WACNC,WAAU,sBAAC,8BAAA7C,EAAA,kEACHc,QADG,IACHA,OADG,EACHA,EAAOC,aADJ,wBAEHe,EAAehB,EAAMC,aAFlB,SAGkBd,MAAMpB,EAAM,iBAAmBiC,EAAMC,aAHvD,WAGCuB,EAHD,QAIWpC,GAJX,uBAKCgC,EAAS,wBALV,iCAQHA,EAAS,IARN,UAScI,EAASG,OATvB,QASCA,EATD,OAUHf,EAAQe,IACR,OAAIV,QAAJ,IAAIA,OAAJ,EAAIA,EAAWe,WACXf,EAAUe,QAAQC,MAAQjC,EAAMC,aAZjC,4CAcR,MACJ,CAACD,EAAOiB,IAEXa,qBAAU,WACN,sBAAC,8BAAA5C,EAAA,kEACOc,QADP,IACOA,OADP,EACOA,EAAOC,aADd,iEAEwBd,MAAMpB,EAAG,WAAOE,IAASL,EAAU,UAAY,YAFvE,cAEO4D,EAFP,gBAGoBA,EAASG,OAH7B,OAGOA,EAHP,OAIGf,EAAQe,GAJX,0CAAD,KAMD,CAAC1D,EAAM+B,IAKN,cAAC,EAAD,UACI,sBAAKV,UAAU,uBAAf,UACI,8BAAM6B,IACLlD,IAASL,EACJ,oBAAI0B,UAAU,mBAAd,iDACD,oBAAIA,UAAU,mBAAd,mDAEL,uBAAM+B,SAAUA,EAAU/B,UAAU,iBAApC,UACKrB,IAASL,GACN,qCACI,kCAAO,uBAAOK,KAAK,QAAQ2B,KAAK,cAAcqC,MAAM,OAAOC,gBAAc,EAACC,SAAU,SAAAb,GAAC,OAAIR,EAAiBQ,EAAEM,OAAOK,UAAnH,YACA,kCAAO,uBAAOhE,KAAK,QAAQ2B,KAAK,cAAcqC,MAAM,OAAOE,SAAU,SAAAb,GAAC,OAAIR,EAAiBQ,EAAEM,OAAOK,UAApG,eAGR,uBAAO3C,UAAU,QAAQrB,KAAK,OAAO2B,KAAK,cAAcuC,SAAU,SAAAb,GAAC,OAAIN,EAAeM,EAAEM,OAAOK,QAAQG,IAAKnB,IAC5G,wBAAQ3B,UAAU,MAAlB,oBACA,wBAAQA,UAAU,MAAMC,QAAS,kBAAMyB,EAAe,KAAtD,yBAEFL,EAGM,oBAAIrB,UAAU,iBAAd,SACKqB,EAAK0B,KAAI,SAAAC,GACN,OAAQrE,GACJ,KAAKL,EACD,IAAK0C,EAAUrC,EAAMqE,GAAO,MAC5B,OAAO,cAAC,EAAD,CAAyB3C,QAAS2C,GAApBA,EAAK1C,MAC9B,KAAK/B,EACD,IAAKyC,EAAUrC,EAAMqE,GAAO,MAC5B,OAAO,cAAC,EAAD,CAAyBlC,QAASkC,GAApBA,EAAK1C,MAIlC,OAAO,kDAAS2C,KAAKC,eAd/B,qBAAKC,MAAO,CAACC,UAAW,WAAxB,oC,gBC/BPC,EA5DD,SAAC,GAAsB,IAApB1E,EAAmB,EAAnBA,KAAmB,EACNyC,mBAAiB,IADX,mBACzBS,EADyB,KAClBC,EADkB,OAEAV,mBAAmB,CAAEjC,SAAU,GAAImE,SAAU,GAAIC,gBAAiB5E,IAASR,EAAS,GAAK,OAFzF,mBAEzBqF,EAFyB,KAEfC,EAFe,KAG1BlE,EAAWC,cACXC,EAAUC,cAEVmD,EAAW,SAACb,GAAD,OAAuCyB,EAAY,2BAAKD,GAAN,kBAAiBxB,EAAEM,OAAOhC,KAAQ0B,EAAEM,OAAOK,UAExGZ,EAAQ,uCAAG,WAAOC,GAAP,mBAAApC,EAAA,yDACboC,EAAEC,iBAEEtD,IAASR,GAAWqF,EAASF,WAAaE,EAASD,gBAH1C,yCAGmEzB,EAAS,yBAH5E,uBAKQjC,MAAMpB,EAAG,WAAOE,IAASR,EAAS,SAAW,SAAW,CACzEuF,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjB3E,SAAUqE,EAASrE,SACnBmE,SAAUE,EAASF,WAEvBS,YAAa,YAZJ,OAKT7B,EALS,OAeT8B,EAAM,GAfG,KAgBL9B,EAAS+B,OAhBJ,OAiBJ,MAjBI,QAsBJ,MAtBI,QAyBJ,MAzBI,gCAkBCnF,EAAO,CAAEK,SAAUqE,EAASrE,UAClCI,EAAUb,EAAWC,EAAMG,IAC3BW,EAAQM,KAAK,KApBR,kCAuBLiE,EAAM,yBAvBD,oCA0BLA,EAAM,4BA1BD,6BA6BLA,EAAMrF,IAASR,EAAS,yBAA2B,mBA7B9C,QA+Bb2D,EAASkC,GA/BI,4CAAH,sDAkCd,OACI,cAAC,EAAD,UACI,sBAAKhE,UAAU,aAAf,UACI,0EAA6CrB,IAASR,EAAS,UAAY,YAC3E,8BAAM0D,IACN,uBAAME,SAAUA,EAAhB,UACI,uBAAO/B,UAAU,QAAQrB,KAAK,OAAO2B,KAAK,WAAW4D,YAAY,WAAWrB,SAAUA,IACtF,uBAAO7C,UAAU,QAAQrB,KAAK,WAAW2B,KAAK,WAAW4D,YAAY,WAAWrB,SAAUA,IACzFlE,IAASR,GACN,uBAAO6B,UAAU,QAAQrB,KAAK,WAAW2B,KAAK,kBAAkB4D,YAAY,mBAAmBrB,SAAUA,IAE7G,wBAAQ7C,UAAU,MAAlB,6BCWLmE,EAzED,SAAChE,GAAkB,IAAD,EACJiB,mBAAiB,IADb,mBACrBd,EADqB,KACf8D,EADe,OAEJhD,mBAAiB9C,GAFb,mBAErBK,EAFqB,KAEf0F,EAFe,OAGAjD,mBAAiB,QAHjB,mBAGrBsC,EAHqB,KAGbY,EAHa,OAIFlD,mBAAiB,IAJf,mBAIrBb,EAJqB,KAIdgE,EAJc,OAKFnD,mBAAiB,IALf,mBAKrBZ,EALqB,KAKdgE,EALc,OAMUpD,mBAAiB,IAN3B,mBAMrBT,EANqB,KAMR8D,EANQ,OAOUrD,mBAAiB,IAP3B,mBAOrBL,EAPqB,KAOR2D,EAPQ,OAQEtD,mBAAiB,IARnB,mBAQrBuD,EARqB,KAQZC,EARY,KAUtB7C,EAAQ,uCAAG,WAAOC,GAAP,eAAApC,EAAA,6DACboC,EAAEC,iBADW,SAEQpC,MAAMpB,EAAG,UAAME,IAASL,EAAU,WAAa,YAAc,CAC9EoF,SACAC,QAAS,CAAE,eAAiB,oBAC5BC,KAAMjF,IAASL,EACTuF,KAAKC,UAAU,CACjBxD,OACAC,QACAC,QACAG,gBAEEkD,KAAKC,UAAU,CACbxD,OACAS,kBAdC,OAiBW,OAfpBmB,EAFS,QAiBA+B,QAAsC,MAApB/B,EAAS+B,OACpCW,EAAW,+BACRA,EAAW,wBAnBL,2CAAH,sDAuBd,OACI,cAAC,EAAD,UACI,sBAAK5E,UAAU,aAAf,UACI,8BAAM2E,IACN,iCACI,sBAAK3E,UAAU,QAAf,UACI,wBAAOA,UAAU,QAAjB,UAA0B,uBAAOrB,KAAK,QAAQ2B,KAAK,OAAOsC,gBAAc,EAACD,MAAOrE,EAASuE,SAAU,SAAAb,GAAC,OAAIqC,EAAQrC,EAAEM,OAAOK,UAAzH,cACA,wBAAO3C,UAAU,QAAjB,UAA0B,uBAAOrB,KAAK,QAAQ2B,KAAK,OAAOqC,MAAOpE,EAAWsE,SAAU,SAAAb,GAAC,OAAIqC,EAAQrC,EAAEM,OAAOK,UAA5G,iBAEJ,gCACI,wBAAO3C,UAAU,QAAjB,UAA0B,uBAAOrB,KAAK,QAAQ2B,KAAK,SAASsC,gBAAc,EAACD,MAAO,OAAQE,SAAU,SAAAb,GAAC,OAAIsC,EAAUtC,EAAEM,OAAOK,UAA5H,UACA,wBAAO3C,UAAU,QAAjB,UAA0B,uBAAOrB,KAAK,QAAQ2B,KAAK,SAASqC,MAAO,SAAUE,SAAU,SAAAb,GAAC,OAAIsC,EAAUtC,EAAEM,OAAOK,UAA/G,mBAGI,WAAXe,EACK,uBAAM3B,SAAUA,EAAhB,UACE,uBAAOpD,KAAK,OAAOuF,YAAY,OAAOlE,UAAU,QAAQ6C,SAAU,SAAAb,GAAC,OAAGoC,EAAQpC,EAAEM,OAAOK,UACvF,wBAAQ3C,UAAU,MAAlB,uBAEFrB,IAASL,EAEX,uBAAMyD,SAAUA,EAAhB,UACI,uBAAOpD,KAAK,OAAOqB,UAAU,QAAQkE,YAAY,OAAOrB,SAAU,SAAAb,GAAC,OAAIoC,EAAQpC,EAAEM,OAAOK,UACxF,uBAAOhE,KAAK,OAAOqB,UAAU,QAAQkE,YAAY,SAASrB,SAAU,SAAAb,GAAC,OAAIuC,EAASvC,EAAEM,OAAOK,UAC3F,uBAAOhE,KAAK,OAAOqB,UAAU,QAAQkE,YAAY,SAASrB,SAAU,SAAAb,GAAC,OAAIwC,EAASxC,EAAEM,OAAOK,UAC3F,uBAAOhE,KAAK,OAAOqB,UAAU,QAAQkE,YAAY,UAAUrB,SAAU,SAAAb,GAAC,OAAIyC,EAAezC,EAAEM,OAAOK,UAClG,wBAAQ3C,UAAU,MAAlB,uBAGJ,uBAAM+B,SAAUA,EAAhB,UACI,uBAAOpD,KAAK,OAAOqB,UAAU,QAAQkE,YAAY,OAAOrB,SAAU,SAAAb,GAAC,OAAIoC,EAAQpC,EAAEM,OAAOK,UACxF,uBAAOhE,KAAK,WAAWqB,UAAU,QAAQkE,YAAY,cAAcrB,SAAU,SAAAb,GAAC,OAAI0C,EAAe1C,EAAEM,OAAOK,UAC1G,wBAAQ3C,UAAU,MAAlB,6BC5DT6E,EAPE,SAAC,GAAyB,IAAD,IAAtB7F,UAAsB,MAAjB,IAAiB,EAChCS,EAAUC,cAGhB,OAFA8C,qBAAU,kBAAM/C,EAAQM,KAAKf,MAEtB,8BCsCI8F,MAlCf,WACE,IAAMhG,EAAOC,aAAY,qBAAGD,QAE5B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOiG,KAAK,UAAU9F,OAAK,EAAC+F,UAAW9E,IAEtCpB,EAEG,CACE,cAAC,IAAD,CAAwBiG,KAAK,kBAAkB9F,OAAK,EAAC+F,UAAW,kBAAM,cAAC,EAAD,CAAYrG,KAAML,MAA5E,YACZ,cAAC,IAAD,CAA0ByG,KAAK,oBAAoB9F,OAAK,EAAC+F,UAAW,kBAAM,cAAC,EAAD,CAAYrG,KAAMJ,MAAhF,eAGd,CACE,cAAC,IAAD,CAAuBwG,KAAK,iBAAiB9F,OAAK,EAAC+F,UAAW,kBAAM,cAAC,EAAD,CAAOrG,KAAMR,MAArE,WACZ,cAAC,IAAD,CAAsB4G,KAAK,gBAAgB9F,OAAK,EAAC+F,UAAW,kBAAM,cAAC,EAAD,CAAOrG,KAAMP,MAAnE,WAIjBU,GAA0B,UAAlBA,EAAKK,UACZ,cAAC,IAAD,CAAoB4F,KAAK,gBAAgBC,UAAWb,GAAzC,UAIZ3F,EAAOuE,KAAI,SAAAkC,GAAK,OAAI,cAAC,IAAD,CAAmBF,KAAME,EAAOhG,OAAK,EAAC+F,UAAWH,GAArCI,MACjC,cAAC,IAAD,CAAOF,KAAK,IAAIG,OAAQ,kBAAM,qCAAE,sDAAF,IAAiC,iCAAQ,cAAC,IAAD,CAAMlG,GAAG,UAAT,wCC7BhEmG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCOCtG,EAbF,WAA6C,IAA5C4B,EAA2C,uDAArC,KAAqC,yCAA7B/B,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,QAC9B,OAAQD,GACJ,KAAKR,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAOO,EACX,QACI,OAAO8B,ICTJkF,cAAgB,CAC3B9G,SCKE+G,EAAQC,YAAYC,GAE1BC,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.cbb3c493.chunk.js","sourcesContent":["export const SIGNUP = 'SIGNUP';\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const POKEMON = 'POKEMON';\r\nexport const ABILITIES = 'ABILITIES';","// export const API = 'http://localhost:8080/server';\r\nexport const API = 'http://54.193.1.233:8080/server';\r\n// export const API = 'http://ec2-54-193-1-233.us-west-1.compute.amazonaws.com:8080/server';\r\n\r\nexport const routes = [\r\n    '/client',\r\n    '/',\r\n    '/client/signup',\r\n    '/client/login',\r\n    '/client/pokemon',\r\n    '/client/abilities',\r\n] as string[];\r\n\r\nexport default API;","// import { SIGNUP, LOGIN, LOGOUT } from '../types';\r\nimport { User } from '../../types';\r\n\r\nconst updateUser = (type : string, payload : User | null) => ({ type, payload });\r\n\r\nexport default updateUser;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { User } from '../../types';\r\n\r\nfunction Nav() {\r\n    const user = useSelector(({ user } : { user : User }) => user);\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink to='/client' exact activeClassName=\"nav-selected\">Home</NavLink>\r\n            {user && <>\r\n                <NavLink to='/client/pokemon' exact activeClassName=\"nav-selected\">Pokemon</NavLink>\r\n                <NavLink to='/client/abilities' exact activeClassName=\"nav-selected\">Abilities</NavLink>\r\n            </>\r\n            }\r\n            {user?.username === 'admin' && <NavLink to='/client/admin' exact activeClassName=\"nav-selected\">Admin</NavLink>}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <span>\r\n                <div>Client: Nick Barak</div>\r\n                <div>Server: Eric Huang</div>\r\n                <br />\r\n                <div>Revature | December 2020</div>\r\n            </span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { ReactChildren, ReactChild } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { User } from '../../types';\r\nimport updateUser from '../../store/actions/updateUser.action';\r\nimport { LOGOUT } from '../../store/types';\r\nimport API from '../../resources';\r\n\r\nimport Nav from './Nav';\r\nimport Footer from './Footer';\r\n\r\ninterface Props {\r\n    children: ReactChildren | ReactChild;\r\n}\r\n\r\nconst Layout = ({ children }: Props) => {\r\n    const user = useSelector(({user} : { user: User }) => user);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const logOut = async () => {\r\n        let response = await fetch(API + '/logout');\r\n        if (response.ok) {\r\n            dispatch( updateUser(LOGOUT, null) );\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!user\r\n                ?\r\n                <span className=\"header-login\">\r\n                    <button><Link to='/client/signup'>Sign up</Link></button>\r\n                    <button><Link to='/client/login'>Log in</Link></button>\r\n                </span>\r\n                : <button className=\"header-logout\" onClick={logOut}>Log out</button>\r\n            }\r\n            <Nav />\r\n                {children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Layout from '../layout';\r\nimport { User } from '../../types';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Home = (props: Props) => {\r\n    const user = useSelector(({ user } : { user : User }) => user);\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"PAGE-HOME body\">\r\n                <h1>Welcome to RRDex!</h1>\r\n                {user\r\n                    ? <div>What will you learn about pokemon today, <strong>{user.username}</strong>?</div>\r\n                    : <div>Log in or sign up to view the site!</div>\r\n                }\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport { Pokemon as PokemonType } from '../types';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    pokemon : PokemonType;\r\n}\r\n\r\nconst Pokemon = ({ pokemon } : Props) => {\r\n    return (\r\n        <li>\r\n            <div>\r\n                <strong>Name: </strong>\r\n                <span>{pokemon.name}</span>\r\n            </div>\r\n            <div>\r\n                <strong>Type: </strong>\r\n                <span>{pokemon.type1 === pokemon.type2 ? pokemon.type1 : `${pokemon.type1}, ${pokemon.type2}`}</span>\r\n            </div>\r\n            <div>\r\n                <strong>Ability: </strong>\r\n                <span><Link to={{\r\n                    pathname: `/client/abilities`,\r\n                    state: { abilityName: pokemon.abilityObj.name }\r\n                }}>\r\n                    {pokemon.abilityObj.name}\r\n                </Link></span>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Pokemon\r\n","import React from 'react'\r\nimport { Ability as AbilityType } from '../types';\r\n\r\ninterface Props {\r\n    ability : AbilityType;\r\n}\r\n\r\nconst Ability = ({ ability } : Props) => {\r\n    return (\r\n        <li>\r\n            <div>\r\n                <strong>Name: </strong>\r\n                <span>{ability.name}</span>\r\n            </div>\r\n            <div>\r\n                <strong>Description: </strong>\r\n                <span>{ability.description}</span>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Ability\r\n","import React, { useState, useEffect, useRef, FormEvent } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Layout from './layout';\r\nimport API from '../resources';\r\nimport { POKEMON, ABILITIES } from '../store/types';\r\nimport Pokemon from './Pokemon';\r\nimport Ability from './Ability';\r\nimport { Pokemon as PokemonType, Ability as AbilityType } from '../types';\r\n\r\n\r\ninterface Props {\r\n    type : typeof POKEMON | typeof ABILITIES;\r\n}\r\n\r\ninterface LocationState {\r\n    abilityName : string;\r\n}\r\n\r\nfunction guardType(type : typeof POKEMON | typeof ABILITIES, object : PokemonType | AbilityType) : boolean {\r\n    switch (type) {\r\n        case POKEMON:\r\n            if (!('name' in object) || !('type1' in object) || !('type2' in object) || !('abilityObj' in object)) break;\r\n            if (!('name' in object.abilityObj) || !('description' in object.abilityObj)) break;\r\n            return true;\r\n        case ABILITIES:\r\n            if (!('name' in object) || !('description' in object)) break;\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n    return false;\r\n}\r\n\r\nconst ListSearch = ({ type } : Props) => {\r\n    const { state } = useLocation<LocationState>();\r\n    const [list, setList] = useState<[PokemonType | AbilityType]|null>(null);\r\n    const [searchSetting, setSearchSetting] = useState<string>('name');\r\n    const [searchValue, setSearchValue] = useState<string>('');\r\n    const searchBar = useRef<HTMLInputElement|null>(null);\r\n    const [error, setError] = useState<string>('');\r\n\r\n    const onSubmit = async (e : FormEvent<HTMLFormElement>) => {\r\n        if (e) e.preventDefault();\r\n        let response;\r\n        if (!searchValue) {\r\n            response = await fetch(API + `/${type === POKEMON ? 'pokemon' : 'ability'}`);\r\n        } else response = await fetch(API + `/${type === POKEMON ? 'pokemon' : 'ability'}?${searchSetting}=${searchValue[0]?.toUpperCase() + searchValue.slice(1)}`);\r\n        if (!response.ok) {\r\n            setError('Error retrieving data');\r\n            return;\r\n        }\r\n        setError('');\r\n        let json = await response.json();\r\n        setList(json);\r\n        if (!searchValue && e) {\r\n            let target = e.target as HTMLFormElement;\r\n            target.reset();\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(async () => {\r\n            if (state?.abilityName) {\r\n                setSearchValue(state.abilityName);\r\n                let response = await fetch(API + '/ability?name=' + state.abilityName);\r\n                if (!response.ok) {\r\n                    setError('Something went wrong');\r\n                    return;\r\n                }\r\n                setError('');\r\n                let json = await response.json();\r\n                setList(json);\r\n                if (searchBar?.current)\r\n                    searchBar.current.value = state.abilityName;\r\n            }\r\n        }, 10);\r\n    }, [state, searchBar]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (state?.abilityName) return;\r\n            let response = await fetch(API + `/${type === POKEMON ? 'pokemon' : 'ability'}`);\r\n            let json = await response.json();\r\n            setList(json);\r\n        })();\r\n    }, [type, state]);\r\n\r\n    \r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"PAGE-LISTSEARCH body\">\r\n                <div>{error}</div>\r\n                {type === POKEMON\r\n                    ? <h3 className=\"listSearchPrompt\">Search for pokemon by name or type!</h3>\r\n                    :<h3 className=\"listSearchPrompt\">Search for pokemon abilities by name!</h3>\r\n                }\r\n                <form onSubmit={onSubmit} className=\"listSearchForm\">\r\n                    {type === POKEMON &&\r\n                        <>\r\n                            <label><input type=\"radio\" name=\"searchRadio\" value=\"name\" defaultChecked onChange={e => setSearchSetting(e.target.value)}/> Name </label>\r\n                            <label><input type=\"radio\" name=\"searchRadio\" value=\"type\" onChange={e => setSearchSetting(e.target.value)}/> Type </label>\r\n                        </>\r\n                    }\r\n                    <input className=\"input\" type=\"text\" name=\"searchValue\" onChange={e => setSearchValue(e.target.value)} ref={searchBar} />\r\n                    <button className=\"btn\">Submit</button>\r\n                    <button className=\"btn\" onClick={() => setSearchValue('')}>Show All</button>\r\n                </form>\r\n                {!list\r\n                    ? <div style={{marginTop: '1.25rem'}}>No results found</div>\r\n                    :\r\n                        <ol className=\"listSearchList\">\r\n                            {list.map(item => {\r\n                                switch (type) {\r\n                                    case POKEMON:\r\n                                        if (!guardType(type, item)) break;\r\n                                        return <Pokemon key={item.name} pokemon={item as PokemonType} />;\r\n                                    case ABILITIES:\r\n                                        if (!guardType(type, item)) break;\r\n                                        return <Ability key={item.name} ability={item as AbilityType} />;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                                return <li key={Math.random()}>Invalid list item</li>\r\n                            })}\r\n                        </ol>\r\n                }\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default ListSearch;","import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport updateUser from '../../store/actions/updateUser.action';\r\nimport { SIGNUP, LOGIN } from '../../store/types';\r\nimport Layout from '../layout';\r\nimport API from '../../resources';\r\n\r\ninterface Props {\r\n    type : typeof SIGNUP | typeof LOGIN;\r\n}\r\n\r\ninterface FormData {\r\n    username : string;\r\n    password : string;\r\n    confirmPassword? : string | null;\r\n}\r\n\r\nconst LogIn = ({ type } : Props) => {\r\n    const [error, setError] = useState<string>('');\r\n    const [formData, setFormData] = useState<FormData>({ username: '', password: '', confirmPassword: type === SIGNUP ? '' : null });\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const onChange = (e : ChangeEvent<HTMLInputElement>) => setFormData({ ...formData, [e.target.name] : e.target.value });\r\n\r\n    const onSubmit = async (e : FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (type === SIGNUP && (formData.password !== formData.confirmPassword)) return setError('Passwords must match');\r\n        \r\n        let response = await fetch(API + `/${type === SIGNUP ? 'signup' : 'login'}`, { \r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ \r\n                username: formData.username,\r\n                password: formData.password\r\n            }),\r\n            credentials: 'include'\r\n        });\r\n\r\n        let msg = '';\r\n        switch (response.status) {\r\n            case 200:\r\n                const user = { username: formData.username }\r\n                dispatch( updateUser(type, user) );\r\n                history.push('/');\r\n                return;\r\n            case 422:\r\n                msg = 'Username not available';\r\n                break;\r\n            case 401:\r\n                msg = 'Invalid username/password';\r\n                break;\r\n            default:\r\n                msg = type === SIGNUP ? 'Error registering user' : 'Error signing in';\r\n        }\r\n        setError(msg);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"PAGE-LOGIN\">\r\n                <h3>Please enter a username and password to {type === SIGNUP ? 'sign up' : 'log in'}</h3>\r\n                <div>{error}</div>\r\n                <form onSubmit={onSubmit}>\r\n                    <input className=\"input\" type=\"text\" name=\"username\" placeholder=\"username\" onChange={onChange} />\r\n                    <input className=\"input\" type=\"password\" name=\"password\" placeholder=\"password\" onChange={onChange} />\r\n                    {type === SIGNUP && \r\n                        <input className=\"input\" type=\"password\" name=\"confirmPassword\" placeholder=\"confirm password\" onChange={onChange} />\r\n                    }\r\n                    <button className=\"btn\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default LogIn;","import React, { useState, FormEvent } from 'react';\r\nimport Layout from './../layout';\r\nimport { POKEMON, ABILITIES } from '../../store/types';\r\nimport API from '../../resources';\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Admin = (props: Props) => {\r\n    const [name, setName] = useState<string>('');\r\n    const [type, setType] = useState<string>(POKEMON);\r\n    const [method, setMethod] = useState<string>('POST');\r\n    const [type1, setType1] = useState<string>('');\r\n    const [type2, setType2] = useState<string>('');\r\n    const [abilityName, setAbilityName] = useState<string>('');\r\n    const [description, setDescription] = useState<string>('');\r\n    const [message, setMessage] = useState<string>('');\r\n\r\n    const onSubmit = async (e : FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        let response = await fetch(API + `${type === POKEMON ? '/pokemon' : '/ability'}`, { \r\n            method,\r\n            headers: { 'Content-Type' : 'application/json' },\r\n            body: type === POKEMON\r\n                ? JSON.stringify({\r\n                name,\r\n                type1,\r\n                type2,\r\n                abilityName\r\n            })\r\n                : JSON.stringify({\r\n                    name,\r\n                    description\r\n                })\r\n        });\r\n        if (response.status === 200 || response.status === 201) {\r\n            setMessage('Edit performed successfully');\r\n        } else setMessage('Something went wrong');\r\n        \r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <div className=\"PAGE-ADMIN\">\r\n                <div>{message}</div>\r\n                <form>\r\n                    <div className=\"types\">\r\n                        <label className=\"radio\" ><input type=\"radio\" name=\"type\" defaultChecked value={POKEMON} onChange={e => setType(e.target.value)} /> Pokemon</label>\r\n                        <label className=\"radio\" ><input type=\"radio\" name=\"type\" value={ABILITIES} onChange={e => setType(e.target.value)} /> Ability</label>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"radio\" ><input type=\"radio\" name=\"method\" defaultChecked value={'POST'} onChange={e => setMethod(e.target.value)} /> Add</label>\r\n                        <label className=\"radio\" ><input type=\"radio\" name=\"method\" value={'DELETE'} onChange={e => setMethod(e.target.value)} /> Delete</label>\r\n                    </div>\r\n                </form>\r\n                {method === 'DELETE'\r\n                    ? <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" placeholder=\"name\" className=\"input\" onChange={e=> setName(e.target.value)} />\r\n                        <button className=\"btn\">Submit</button>\r\n                    </form>\r\n                    : type === POKEMON\r\n                    ?\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" className=\"input\" placeholder=\"name\" onChange={e => setName(e.target.value)}/>\r\n                        <input type=\"text\" className=\"input\" placeholder=\"type 1\" onChange={e => setType1(e.target.value)}/>\r\n                        <input type=\"text\" className=\"input\" placeholder=\"type 2\" onChange={e => setType2(e.target.value)}/>\r\n                        <input type=\"text\" className=\"input\" placeholder=\"ability\" onChange={e => setAbilityName(e.target.value)}/>\r\n                        <button className=\"btn\">Submit</button>\r\n                    </form>\r\n                    :\r\n                    <form onSubmit={onSubmit}>\r\n                        <input type=\"text\" className=\"input\" placeholder=\"name\" onChange={e => setName(e.target.value)}/>\r\n                        <input type=\"textarea\" className=\"input\" placeholder=\"description\" onChange={e => setDescription(e.target.value)} />\r\n                        <button className=\"btn\">Submit</button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface Props {\r\n    to : string;\r\n}\r\n\r\nconst Redirect = ({ to = '/' }: Props) => {\r\n    const history = useHistory();\r\n    useEffect(() => history.push(to));\r\n\r\n    return <></>\r\n}\r\n\r\nexport default Redirect\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport './App.css';\nimport { User } from './types';\nimport { SIGNUP, LOGIN, POKEMON, ABILITIES } from './store/types';\nimport { routes } from './resources';\n\nimport Home from './components/pages/Home';\nimport ListSearch from './components/ListSearch';\nimport LogIn from './components/pages/LogIn';\nimport Admin from './components/pages/Admin';\n\nimport Redirect from './components/pages/Redirect';\n\nfunction App() {\n  const user = useSelector(({ user } : { user : User }) => user);\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        {/* Whether logged in or not, precedent */}\n        <Route path='/client' exact component={Home} />\n\n        {user\n          ? // If logged in\n            [\n              <Route key={'/pokemon'} path='/client/pokemon' exact component={() => <ListSearch type={POKEMON} />} />,\n              <Route key={'/abilities'} path='/client/abilities' exact component={() => <ListSearch type={ABILITIES} />} />\n            ]\n          : // If not\n            [\n              <Route key={'/signup'} path='/client/signup' exact component={() => <LogIn type={SIGNUP} />} />,\n              <Route key={'/login'} path='/client/login' exact component={() => <LogIn type={LOGIN} />} />\n            ]\n        }\n\n        {user && user.username === 'admin' &&\n          <Route key=\"/admin\" path=\"/client/admin\" component={Admin} />\n        }\n\n        {/* Whether logged in or not, ultimate */}\n        {routes.map(route => <Route key={route} path={route} exact component={Redirect} />)}\n        <Route path='/' render={() => <><div>404: Page Not Found</div> <button><Link to='/client'>Back to Home</Link></button></>} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Action } from '../../types';\r\nimport { SIGNUP, LOGIN, LOGOUT } from '../types';\r\n\r\nconst user = (state=null, { type, payload } : Action) => {\r\n    switch (type) {\r\n        case SIGNUP:\r\n            return payload;\r\n        case LOGIN:\r\n            return payload;\r\n        case LOGOUT:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;","import { combineReducers } from 'redux';\r\nimport user from './user.reducer';\r\n\r\nexport default combineReducers({\r\n    user\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}